7-9 求整数的位数及各位数字之和 （15 分）
对于给定的正整数N，求它的位数及其各位数字之和。
输入格式：
输入在一行中给出一个不超过10
​9
​​的正整数N。
输出格式：
在一行中输出N的位数及其各位数字之和，中间用一个空格隔开。


#include<stdio.h>

int main(void)
{
	int n, sum=0, cnt=0;
	scanf("%d", &n);
	while (n != 0) {//在做权重时 此处是n/10!=0,因为权重时设在如500 ，是执行两次循坏//
		cnt++;
		sum += n % 10;
		n = n / 10;
	}
	printf("%d %d", cnt, sum);
	return 0;
}






按权展开


#include<stdio.h>
int main(void)
{
	int n, temp, power=1;//记得赋予初值//
	scanf("%d", &n);
	temp = n;
	while (temp/ 10 != 0) {//用上temp使n的值不变//
		temp /= 10;
		power *= 10;
	}
	while (power != 0) {
		printf("%d ", n / power);
		n = n%power;
		power /= 10;
	}
	return 0;
}



下面是用函数来做




6-5 递归实现顺序输出整数 （15 分）
本题要求实现一个函数，对一个整数进行按位顺序输出。
函数接口定义：
void printdigits( int n );
函数printdigits应将n的每一位数字从高位到低位顺序打印出来，每位数字占一行。

void printdigits(int n)
{
	if (n < 10)
		printf("%d\n", n);
	else
	{
		printdigits(n / 10);
		printf("%d\n", n % 10);
	}
}



类似的还有

6-4 十进制转换二进制 （15 分）
本题要求实现一个函数，将正整数n转换为二进制后输出。
函数接口定义：
void dectobin( int n );
函数dectobin应在一行中打印出二进制的n。建议用递归实现。

void dectobin(int n)
{
	if (n == 0||n == 1)
	  printf("%d",n);
		
	else
	{
		dectobin(n / 2);
		printf("%d", n % 2);
	}
}


以上使用了高位到低位，采用了递归

6-2 使用函数输出一个整数的逆序数 （20 分）
本题要求实现一个求整数的逆序数的简单函数。
函数接口定义：
int reverse( int number );
其中函数reverse须返回用户传入的整型number的逆序数。



int reverse(int number)
{
	int sum = 0;
	while (number != 0) {//如题一，直接使用n!=0
		sum = sum * 10 + number % 10;/每循环一次，将sum*10，达到逆序效果
		number = number / 10;
	}
	
	return sum;
}
